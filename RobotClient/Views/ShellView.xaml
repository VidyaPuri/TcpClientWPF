<Window x:Class="RobotClient.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RobotClient.Views"
        xmlns:converters="clr-namespace:RobotInterface.Converters"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        WindowState="{Binding WindowState}"
        WindowStyle="None"
        FontSize="12"
        cal:Message.Attach="[Event MouseUp] = [Action MouseUp];[Event PreviewMouseLeftButtonUp] = [Action TimeLineEventLeftUp($source)]"
        Title="TCP Client" Width="1240" Height="1080"  MinHeight="800" MinWidth="540" MaxWidth="1240" MaxHeight="1080" Background="#2B2F3D">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30"/>
    </WindowChrome.WindowChrome>
    
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
        <converters:EventLengthConverter x:Key="mEventLengthConverter"/>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="25"></RowDefinition>
        </Grid.RowDefinitions>
        
        <!-- Window Control-->
        <Grid Grid.Row="0" Grid.ColumnSpan="5" Background="#466874">
            <Label Content="Robot TCP Client" Margin="5 0" FontWeight="Bold" FontSize="13" Foreground="Gainsboro"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True">
                <Button x:Name="MinimizeWindow" Height="30" Width="30" Style="{DynamicResource WindowControllButtons}">
                    <Image Source="Styles/Icons/Minimize.png" Width="15"/>
                </Button>

                <ToggleButton x:Name="MaximizeWindow" Height="30" Width="30" Template="{DynamicResource UnMaksimize_Maximize_Button}">
                    <ToggleButton.Resources>
                        <DataTemplate x:Key="Unpressed">
                            <Image Source="Styles/Icons/Maksimize.png" Width="15"/>
                        </DataTemplate>
                        <DataTemplate x:Key="Pressed">
                            <Image Source="Styles/Icons/UnMaksimize.png" Width="15"/>
                        </DataTemplate>
                    </ToggleButton.Resources>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Unpressed}"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ContentTemplate" Value="{StaticResource Pressed}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Button x:Name="CloseWindow" Height="30" Width="30" Style="{DynamicResource WindowControllButtons}">
                    <Image Source="Styles/Icons/Close.png" Width="15"/>
                </Button>
            </StackPanel>
        </Grid>
        
        <!-- Networking View-->
        <Grid Grid.Row="2" Grid.Column="1"> 
            <ContentControl x:Name="NetworkingViewModel" />
        </Grid>

        <!--  Timeline controls -->
        <Border Grid.Row="2" Grid.Column="3" BorderBrush="Black" BorderThickness="1" Background="#fffcf9"/>
        <Grid Grid.Row="2" Grid.Column="3"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="5"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="5"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="5"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!-- Timeline-->
            <GroupBox Header="Timeline" Grid.Row="1" Grid.Column="1" BorderThickness="1" BorderBrush="Black" >
                <Grid Grid.Row="1" Grid.Column="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="1"  Grid.Column="1" >
                        <StackPanel  Margin="0 5">
                            <DockPanel>
                                <Label DockPanel.Dock="Left" Content="0"></Label>
                                <Label DockPanel.Dock="Right" Content="10" HorizontalAlignment="Right"></Label>
                            </DockPanel>
                        </StackPanel>

                        <Canvas Grid.Row="1" Grid.Column="1" Width="650" MaxWidth="650" Height="90" 
                            Background="Gray" HorizontalAlignment="Left" x:Name="Canvas"
                            cal:Message.Attach= "[Event MouseMove] = [Action MouseMove($source)]">
                            <ItemsControl  Background="AliceBlue" Width="650" >
                                <ItemsControl ItemsSource="{Binding Timelines}" x:Name="TL" >
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <ItemsControl x:Name="TimeLine" ItemsSource="{Binding Events}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <Grid x:Name="EventContainer" Height="30" Background="gray" Width="650" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Margin="0 1">
                                                            <Rectangle Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Left" Panel.ZIndex="4"
                                                                       Stroke="Black" StrokeThickness="1.5" 
                                                                       cal:Action.TargetWithoutContext="{Binding Path=DataContext, ElementName=TimeLine}"
                                                                       cal:Message.Attach= "[Event PreviewMouseLeftButtonDown] = [Action TimeLineEventLeftDown($source, $eventArgs)];
                                                                       [Event PreviewMouseLeftButtonUp] = [Action TimeLineEventLeftUp($source)];
                                                                       [Event PreviewMouseMove] = [Action TimeLineEventMouseMove($source, $eventArgs)]" >
                                                                <Rectangle.Margin>
                                                                    <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                                        <Binding ElementName="TimeLine" Path="DataContext.Duration"/>
                                                                        <Binding Path="Start"/>
                                                                        <Binding ElementName="EventContainer" Path="ActualWidth"/>
                                                                    </MultiBinding>
                                                                </Rectangle.Margin>
                                                                <Rectangle.Width>
                                                                    <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                                        <Binding ElementName="TimeLine" Path="DataContext.Duration"/>
                                                                        <Binding Path="Duration"/>
                                                                        <Binding ElementName="EventContainer" Path="ActualWidth"/>
                                                                    </MultiBinding>
                                                                </Rectangle.Width>
                                                                <Rectangle.Fill>
                                                                    <SolidColorBrush Color="MediumPurple"></SolidColorBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Padding="5" IsHitTestVisible="False" Panel.ZIndex="5">
                                                                <TextBlock.Margin>
                                                                    <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                                        <Binding ElementName="TimeLine" Path="DataContext.Duration"/>
                                                                        <Binding Path="Start"/>
                                                                        <Binding ElementName="EventContainer" Path="ActualWidth"/>
                                                                    </MultiBinding>
                                                                </TextBlock.Margin>
                                                            </TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ItemsControl>

                            <Rectangle x:Name="Floater" Width="9" Height="90" 
                                   Fill="LightGoldenrodYellow" Stroke="Black" StrokeThickness="2.5" 
                                   Canvas.Left="{Binding FloaterPos,Mode=TwoWay}"
                                   cal:Message.Attach = "[Event MouseLeftButtonDown] = [Action MouseDown]">
                            <Rectangle.Triggers>
                                <EventTrigger RoutedEvent="MouseLeftButtonDown">
                                    <StopStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                                </EventTrigger>
                            </Rectangle.Triggers>
                        </Rectangle>
                            <StackPanel Panel.ZIndex="3">
                                <Path Stroke="Black" StrokeThickness="3" Data="M -1,-5 h 652" />
                                <Path Stroke="Black" StrokeThickness="3" Data="M 0,-5 v 100" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 65,-100 v 100"/>
                                <Path Stroke="Black" StrokeThickness="1" Data="M 130, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 195, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 260, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 325, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 390, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 455, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 520, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 585, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="3" Data="M 650, -100 v 100" />
                                <Path Stroke="Black" StrokeThickness="3" Data="M 0,0 h 650" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 0,-33 h 650" />
                                <Path Stroke="Black" StrokeThickness="1" Data="M 0,-66 h 650" />
                            </StackPanel>
                    </Canvas>

                        <!--<Slider Value="{Binding FloaterPos}" Width="500" Minimum="0" Maximum="500"></Slider>-->
                        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="5 10 0 5">
                            <Button Name="StartButton" Style="{DynamicResource ButtonStyle1}">Start</Button>
                            <Button Name="PauseButton" Style="{DynamicResource ButtonStyle1}">Pause</Button>
                            <Button Name="ResumeButton" Style="{DynamicResource ButtonStyle1}">Resume</Button>
                            <Button Name="SkipToEndButton" Style="{DynamicResource ButtonStyle1}">Skip To End</Button>
                            <Button Name="StopButton" Style="{DynamicResource ButtonStyle1}">Stop</Button>
                        </StackPanel>
                        
                        <!-- Debug row-->
                        <GroupBox Header="Status console" Grid.Row="3"  BorderThickness="1" BorderBrush="DimGray">
                        <Grid  Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            
                            <StackPanel Grid.Column="0" >
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Mouse status: "></Label>
                                    <TextBlock Text="{Binding MouseStatus, FallbackValue=0}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Mouse Y pos: "></Label>
                                    <TextBlock Text="{Binding MousePosX, FallbackValue=0}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Floater pos: "></Label>
                                    <TextBlock Text="{Binding FloaterPos, FallbackValue=0}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Time: "></Label>
                                    <TextBlock Text="{Binding CurrentTime, FallbackValue=0, StringFormat={}{0:#}}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Time string: "></Label>
                                    <TextBlock Text="{Binding CurrentTimeStr, FallbackValue=0, StringFormat={}{0:#}}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Duration: "></Label>
                                    <TextBlock Text="{Binding StoryDuration, FallbackValue=0, StringFormat={}{0:#}}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Grid.Column="1">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Debug text:"></Label>
                                    <TextBlock Text="{Binding DebugString}" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="TimeLine Pos X text:"></Label>
                                    <TextBlock Text="{Binding TimeLineEventPosX}" VerticalAlignment="Center"></TextBlock>
                                </StackPanel> 
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="TimeLine Pos X text:"></Label>
                                    <TextBlock Text="{Binding MouseCurrentPosX}" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Mouse distance moved in pixels: "></Label>
                                    <TextBlock Text="{Binding MouseDistanceMoved}" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Mouse distance moved in seconds: "></Label>
                                    <TextBlock Text="{Binding MouseMovedInSeconds}" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Mouse clicked: "></Label>
                                    <TextBlock Text="{Binding MouseClickedEvent}" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                            </StackPanel> 
                        </Grid>
                        </GroupBox>
                        <Button Grid.Row="4" x:Name="FeedTimelines" Content="Feed Timeline"  Style="{DynamicResource ButtonStyle1}">
                            
                        </Button>
                        
                    </StackPanel>
                    
                    <Grid.Triggers>
                        <EventTrigger SourceName="StartButton" RoutedEvent="Button.Click">
                            <StopStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                            <BeginStoryboard x:Name="TheTimelineStoryboard">
                                <Storyboard CurrentTimeInvalidated="CurrentTimeInvalidatedEventHandler" >
                                    <DoubleAnimation 
                                            Storyboard.TargetName="Floater"
                                            Storyboard.TargetProperty="(Canvas.Left)"
                                            FillBehavior="HoldEnd"
                                            Duration="{Binding StoryDuration}"
                                            From="{Binding FloaterPos}" To="650">
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger SourceName="PauseButton" RoutedEvent="Button.Click">
                            <PauseStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                        <EventTrigger SourceName="ResumeButton" RoutedEvent="Button.Click">
                            <ResumeStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                        <EventTrigger SourceName="SkipToEndButton" RoutedEvent="Button.Click">
                            <SkipStoryboardToFill BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                        <EventTrigger SourceName="StopButton" RoutedEvent="Button.Click">
                            <StopStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                        <EventTrigger SourceName="Floater" RoutedEvent="MouseLeftButtonDown">
                            <StopStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                    </Grid.Triggers>
                </Grid>
            </GroupBox>
        </Grid>
        
        <!-- ####################################################################################################################################################################################################################################################################################-->
        <!-- Status bar -->
        <Grid Grid.Row="5" Grid.ColumnSpan="5" Background="#466874" >
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" >
                    <Label Content="Socket status: " Foreground="Gainsboro" FontSize="10" ></Label>
                    <Label Content="{Binding ConnectionStatusStr}" Foreground="Gainsboro" FontSize="10"></Label>
                    <Label Content="Controller status: " Foreground="Gainsboro" FontSize="10"></Label>
                    <Label Content="{Binding ControllerConnectionStatusBool}" Foreground="Gainsboro" FontSize="10"></Label>
                    <Label Content="Controller move type: " Foreground="Gainsboro" FontSize="10"></Label>
                    <Label Content="{Binding ControllerMoveToggle}" Foreground="Gainsboro" FontSize="10"></Label>
                </StackPanel>
            </DockPanel>
        </Grid>
    </Grid>
    <!-- Styles and templates-->


</Window>
