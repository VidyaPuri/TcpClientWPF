<Window x:Class="RobotClient.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RobotClient.Views"
        xmlns:converters="clr-namespace:RobotInterface.Converters"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        WindowState="{Binding WindowState}"
        WindowStyle="None"
        FontSize="12"
        cal:Message.Attach="[Event MouseUp] = [Action MouseUp];[Event PreviewMouseLeftButtonUp] = [Action TimeLineEventLeftUp($source)]"
        Title="TCP Client" Width="1240" Height="1080"  MinHeight="800" MinWidth="540" MaxWidth="1240" MaxHeight="1080" Background="#2B2F3D">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30"/>
    </WindowChrome.WindowChrome>
    
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
        <converters:EventLengthConverter x:Key="mEventLengthConverter"/>

    </Window.Resources>
    
    <!--<Grid>-->
    <Grid Margin="5" Background="#fffcf9">
        <!-- Outer Shell-->
        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="35"></RowDefinition>
            <RowDefinition Height="35"></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="25"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <!-- Window Control-->
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" Background="#466874">
            <Label Content="Robot TCP Client" Margin="5 0" FontWeight="Bold" FontSize="13" Foreground="Gainsboro"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True">
                <Button x:Name="MinimizeWindow" Height="30" Width="30" Style="{DynamicResource WindowControllButtons}">
                    <Image Source="Styles/Icons/Minimize.png" Width="15"/>
                </Button>

                <ToggleButton x:Name="MaximizeWindow" Height="30" Width="30" Template="{DynamicResource UnMaksimize_Maximize_Button}">
                    <ToggleButton.Resources>
                        <DataTemplate x:Key="Unpressed">
                            <Image Source="Styles/Icons/Maksimize.png" Width="15"/>
                        </DataTemplate>
                        <DataTemplate x:Key="Pressed">
                            <Image Source="Styles/Icons/UnMaksimize.png" Width="15"/>
                        </DataTemplate>
                    </ToggleButton.Resources>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Unpressed}"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ContentTemplate" Value="{StaticResource Pressed}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Button x:Name="CloseWindow" Height="30" Width="30" Style="{DynamicResource WindowControllButtons}">
                    <Image Source="Styles/Icons/Close.png" Width="15"/>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Connection panel -->
        <Border Grid.Row="2" Grid.Column="1" Grid.RowSpan="2" BorderBrush="Black" BorderThickness="1"/>
        <DockPanel Grid.Row="2" Grid.Column="1">
            <Label Content="IP Address" Margin="5" Foreground="Black" FontWeight="Bold"/>
            <TextBox x:Name="IpAddress" Width="200" Margin="5" VerticalContentAlignment="Center"/>
            <Label Content="Port" Margin="5" Foreground="Black" FontWeight="Bold"/>
            <TextBox x:Name="Port" Width="60" Margin="5" VerticalContentAlignment="Center" />
            <Button x:Name="ConnectToRobot" Content="{Binding ConnectToggle, FallbackValue=Connect}" 
                        IsEnabled="{Binding CanConnect}" DockPanel.Dock="Right"
                        Margin="5" Padding="5" VerticalContentAlignment="Center"
                        Style="{DynamicResource ButtonStyle1}">
            </Button>
        </DockPanel>

        <!-- Dashboard server panel -->
        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
            <Label Width="Auto" Content="Dashboard Server" Margin="5" FontWeight="Bold" VerticalContentAlignment="Center"/>
            <TextBox x:Name="Script" Width="303" Margin="5" VerticalContentAlignment="Center"/>
            <RepeatButton x:Name="SendScript" Content="Send" Margin="5" Padding="5" Style="{DynamicResource ButtonStyle2}" Width="46"/>
        </StackPanel>

        <!-- Robot Controls -->
        <Border Grid.Row="5" Grid.Column="1" Grid.RowSpan="1" BorderBrush="Black" BorderThickness="1"/>
        <Grid Grid.Row="5" Grid.Column="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="3"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="3"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="5"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <!-- Move Joints-->
                <GroupBox Header="Move Joints" Grid.Row="0" Grid.Column="1" BorderThickness="1" BorderBrush="DimGray">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto" MinWidth="40"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <!-- Move Joints data-->
                        <Label Content="J0" Grid.Row="0" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotJoints[0], StringFormat={}{0:0.####}}" Grid.Row="0" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="°" Grid.Row="0" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <Label Content="J1" Grid.Row="1" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotJoints[1], StringFormat={}{0:0.####}}" Grid.Row="1" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="°" Grid.Row="1" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <Label Content="J2" Grid.Row="2" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotJoints[2], StringFormat={}{0:0.####}}" Grid.Row="2" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="°" Grid.Row="2" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <Label Content="J3" Grid.Row="3" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotJoints[3], StringFormat={}{0:0.####}}" Grid.Row="3" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="°" Grid.Row="3" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <Label Content="J4" Grid.Row="4" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotJoints[4], StringFormat={}{0:0.####}}" Grid.Row="4" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="°" Grid.Row="4" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <Label Content="J5" Grid.Row="5" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotJoints[5], StringFormat={}{0:0.####}}" Grid.Row="5" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="°" Grid.Row="5" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <!-- Move Joints buttons-->
                        <RepeatButton x:Name="J0Sub" Content="J0-" Grid.Row="0" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="45" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="J0Add" Content="J0+" Grid.Row="0" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="45" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="J1Sub" Content="J1-" Grid.Row="1" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="45" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="J1Add" Content="J1+" Grid.Row="1" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="J2Sub" Content="J2-" Grid.Row="2" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="J2Add" Content="J2+" Grid.Row="2" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="J3Sub" Content="J3-" Grid.Row="3" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="J3Add" Content="J3+" Grid.Row="3" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="J4Sub" Content="J4-" Grid.Row="4" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="J4Add" Content="J4+" Grid.Row="4" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="J5Sub" Content="J5-" Grid.Row="5" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="J5Add" Content="J5+" Grid.Row="5" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>


                    </Grid>
                </GroupBox>

                <GroupBox Header="Move Tool" Grid.Row="0" Grid.Column="3" BorderThickness="1" BorderBrush="DimGray">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto" MinWidth="40"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <!-- Move Tool data-->
                        <Label Content="X" Grid.Row="0" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotPose[0], StringFormat={}{0:0.####}}" Grid.Row="0" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="mm" Grid.Row="0" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <Label Content="Y" Grid.Row="1" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotPose[1], StringFormat={}{0:0.####}}" Grid.Row="1" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="mm" Grid.Row="1" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <Label Content="Z" Grid.Row="2" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotPose[2], StringFormat={}{0:0.####}}" Grid.Row="2" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>
                        <!--<TextBlock Text="mm" Grid.Row="2" Grid.Column="2" MinWidth="20" VerticalAlignment="Center"/>-->

                        <Label Content="Rx" Grid.Row="3" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotPose[3], StringFormat={}{0:0.####}}" Grid.Row="3" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>

                        <Label Content="Ry" Grid.Row="4" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotPose[4], StringFormat={}{0:0.####}}" Grid.Row="4" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>

                        <Label Content="Rz" Grid.Row="5" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RobotPose[5], StringFormat={}{0:0.####}}" Grid.Row="5" Grid.Column="1" MinWidth="20" VerticalAlignment="Center"/>

                        <!-- Move Tool buttons-->
                        <RepeatButton x:Name="TxSub" Content="Tx-" Grid.Row="0" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="45" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="TxAdd" Content="Tx+" Grid.Row="0" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="45" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="TySub" Content="Ty-" Grid.Row="1" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="TyAdd" Content="Ty+" Grid.Row="1" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="TzSub" Content="Tz-" Grid.Row="2" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="TzAdd" Content="Tz+" Grid.Row="2" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="RxSub" Content="Rx-" Grid.Row="3" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="RxAdd" Content="Rx+" Grid.Row="3" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                        <RepeatButton x:Name="RySub" Content="Ry-" Grid.Row="4" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="RyAdd" Content="Ry+" Grid.Row="4" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>


                        <RepeatButton x:Name="RzSub" Content="Rz-" Grid.Row="5" Grid.Column="3" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>
                        <RepeatButton x:Name="RzAdd" Content="Rz+" Grid.Row="5" Grid.Column="4" VerticalContentAlignment="Center" VerticalAlignment="Center"
                            IsEnabled="{Binding ConnectionStatusBool}"
                            Margin="5" MinWidth="35" Style="{DynamicResource RepeatButtonStyle1}">
                        </RepeatButton>

                    </Grid>
                </GroupBox>

                <!-- IO and Dashboard settings -->
                <StackPanel Grid.Row="0" Grid.Column="5">
                    <!-- Digital I/O -->
                    <GroupBox Header="Digital I/O" Grid.Row="1" Grid.Column="5" BorderThickness="1" BorderBrush="DimGray">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical" Margin="5">
                                <CheckBox Content="0" Name="Io0" VerticalAlignment="Center" FlowDirection="RightToLeft" IsEnabled="{Binding ConnectionStatusBool}"></CheckBox>
                                <CheckBox Content="1" Name="Io1" VerticalAlignment="Center" FlowDirection="RightToLeft" IsEnabled="{Binding ConnectionStatusBool}"></CheckBox>
                                <CheckBox Content="2" Name="Io2" VerticalAlignment="Center" FlowDirection="RightToLeft" IsEnabled="{Binding ConnectionStatusBool}"></CheckBox>
                                <CheckBox Content="3" Name="Io3" VerticalAlignment="Center" FlowDirection="RightToLeft" IsEnabled="{Binding ConnectionStatusBool}"></CheckBox>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="5">
                                <CheckBox Content="4" Name="Io4" VerticalAlignment="Center" FlowDirection="LeftToRight" IsEnabled="{Binding ConnectionStatusBool}"></CheckBox>
                                <CheckBox Content="5" Name="Io5" VerticalAlignment="Center" FlowDirection="LeftToRight" IsEnabled="{Binding ConnectionStatusBool}"></CheckBox>
                                <CheckBox Content="6" Name="Io6" VerticalAlignment="Center" FlowDirection="LeftToRight" IsEnabled="{Binding ConnectionStatusBool}"></CheckBox>
                                <CheckBox Content="7" Name="Io7" VerticalAlignment="Center" FlowDirection="LeftToRight" IsEnabled="{Binding ConnectionStatusBool}"></CheckBox>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <!-- Dashboard Settings -->
                    <GroupBox Header="Dashboard" Grid.Row="1" Grid.Column="5" BorderThickness="1" BorderBrush="DimGray" Margin="0 5 0 0 ">
                        <StackPanel Orientation="Vertical">
                            <Button x:Name="ClosePopup" Content="Close msg" Margin="5" Width="102" Style="{DynamicResource ButtonStyle1}"/>
                            <Button x:Name="EnableRobot" Content="Enable robot" Margin="5" Width="102" Style="{DynamicResource ButtonStyle1}"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>

                <!-- Move Rate -->
                <GroupBox Header="Move Rate" Grid.Row="2" Grid.Column="1"  Grid.ColumnSpan="6" BorderThickness="1" BorderBrush="DimGray">
                    <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Grid.RowSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Label  Content="Traslation rate" Grid.Column="0" FontSize="12"/>
                        <TextBox Text="{Binding TranslationRate, StringFormat={}{0:0.###}}" Grid.Column="1" MinWidth="40" VerticalAlignment="Center"></TextBox>
                        <Label  Content="Rotation rate" Grid.Column="2" FontSize="12"/>
                        <TextBox Text="{Binding RotationRate, StringFormat={}{0:0.###}}" Grid.Column="3" MinWidth="40" VerticalAlignment="Center"></TextBox>
                        <Button x:Name="Home" Grid.Column="4" Content="Home" Margin="4" FontSize="12" Width="60" HorizontalAlignment="Right" Style="{DynamicResource ButtonStyle1}"/>
                    </Grid>
                </GroupBox>

                <!-- TCP Socket Server -->
                <GroupBox Header="TCP Socket Server" Grid.Row="4" Grid.Column="1"  Grid.ColumnSpan="6" BorderThickness="1" BorderBrush="DimGray">
                    <StackPanel Orientation="Horizontal" Margin="10,5,10,0">
                        <Button x:Name="StartSocketServer" Content="Start server" Width="100" Style="{DynamicResource ButtonStyle1}"/>
                        <Button x:Name="StopSocketServer" Content="Stop server" Width="100" Style="{DynamicResource ButtonStyle1}"/>
                        <RadioButton Content="Status" HorizontalAlignment="Center" IsEnabled="False"
                                     FlowDirection="RightToLeft" Margin="15 0 0 0" 
                                     Style="{DynamicResource RadioButtonStyle1}" 
                                     VerticalAlignment="Center">
                        </RadioButton>
                    </StackPanel>
                </GroupBox>
            </Grid>
        </Grid>

        <!-- USB Serial Port -->
        <Border Grid.Row="7" Grid.Column="1" Grid.RowSpan="1" BorderBrush="Black" BorderThickness="1"/>
        <Grid Grid.Row="7" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="5"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="5"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
            </Grid.ColumnDefinitions>

            <!-- USB Serial Communication -->
            <ToggleButton Grid.Column="1" Grid.Row="1" Height="20" Width="155" VerticalAlignment="top" HorizontalAlignment="Left" IsChecked="True"
                          x:Name="ToggleVisibility_02" Panel.ZIndex="1" Style="{DynamicResource VisibilityToggleButton}"/>
            <GroupBox Grid.Column="1" Grid.Row="1" Header="USB Serial Communication" BorderThickness="1" BorderBrush="DimGray">
                <Grid Grid.Row="1" Visibility="{Binding ElementName=ToggleVisibility_02, Path=IsChecked, Converter={StaticResource BoolToVisibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10 5">
                            <Button x:Name="USBSerialConnect" Content="{Binding USBConnectBtnText, FallbackValue='Open Port'}"
                                    Width="100" Style="{DynamicResource ButtonStyle1}"/>
                            <RadioButton Content="Status" HorizontalAlignment="Center"  IsChecked="{Binding USBSerialStatus}" IsEnabled="False"
                                         FlowDirection="RightToLeft" Margin="15 0 0 0" Style="{DynamicResource RadioButtonStyle1}" 
                                         VerticalAlignment="Center">
                            </RadioButton>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="10 5">
                            <TextBox x:Name="SerialInput" Width="414" Height="auto"  VerticalContentAlignment="Center" Margin="0 0 10 0"/>
                            <Button x:Name="SendSerial" Content="Send" Width="45" Style="{DynamicResource ButtonStyle1}"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Slider x:Name="Slider" Value="{Binding SliderValue}" Width="370" Minimum="520" Maximum="2380" IsSnapToTickEnabled="True" TickFrequency="5" Margin="10 0 0 0" VerticalAlignment="Center"/>
                            <Label Content="Value:" VerticalAlignment="Center"></Label>
                            <TextBlock Text="{Binding SliderValue, StringFormat={}{0:0.#}}" Margin="10 0" Width="50" VerticalAlignment="Center"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10">
                            <StackPanel >
                                <Button Content="Add" x:Name="AddFocusTarget"  Style="{DynamicResource ButtonStyle1}" Width="100"/>
                                <Button Content="Insert" x:Name="InsertFocusTarget" Style="{DynamicResource ButtonStyle1}" Width="100"/>
                                <Button Content="Edit" x:Name="EditFocusTarget"  Style="{DynamicResource ButtonStyle1}" Width="100"/>
                                <Button Content="Remove" x:Name="RemoveFocusTarget"  Style="{DynamicResource ButtonStyle1}" Width="100"/>
                            </StackPanel>
                            <ListView  ItemsSource="{Binding FocusList}" SelectionMode="Single"
                                       MinHeight="50" MaxHeight="100" MinWidth="365"
                                       SelectedIndex="{Binding SelectedFocusTargetIdx}"
                                       SelectedItem="{Binding SelectedFocusTarget}" BorderBrush="#141414" BorderThickness="1">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="   " Height="20"/>
                                            <TextBox Text="{Binding Name}" Foreground="#FFB4B4B4" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Height="18" Width="248"/>
                                            <TextBlock Text="   " Height="20"/>
                                            <TextBlock Text="{Binding Val, StringFormat={}{0:0.#}}" Foreground="#FFB4B4B4" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Height="18" Width="30"/>
                                            <TextBlock Text="   " Height="20"/>
                                            <TextBox Text="{Binding Idx}" Foreground="#FFB4B4B4" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Height="18"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>

        <!-- Bluetooth Serial -->
        <Border Grid.Row="9" Grid.Column="1" Grid.RowSpan="1" BorderBrush="Black" BorderThickness="1"/>
        <Grid Grid.Row="9" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="5"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="5"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
            </Grid.ColumnDefinitions>

            <!-- Arduino Bluetooth -->
            <ToggleButton Grid.Column="1" Grid.Row="1" Height="20" Width="185" VerticalAlignment="top" HorizontalAlignment="Left" IsChecked="True"
                          x:Name="ToggleVisibility_03" Panel.ZIndex="1" Style="{DynamicResource VisibilityToggleButton}"/>
            <GroupBox Grid.Column="1" Grid.Row="1" Header="Bluetooth Serial Communication" BorderThickness="1" BorderBrush="DimGray">
                <Grid Visibility="{Binding ElementName=ToggleVisibility_03, Path=IsChecked, Converter={StaticResource BoolToVisibility}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="3"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <!-- Column 0-->
                    <StackPanel Grid.Column="0" Margin="5,5,5,12" Grid.ColumnSpan="2">
                        <StackPanel Orientation="Horizontal" Margin="10 5">
                            <Button x:Name="BTSerialConnect" Content="{Binding BTConnectBtnText, FallbackValue='Connect'}" 
                                Style="{DynamicResource ButtonStyle1}" Width="100"/>
                            <RadioButton Content="Status" FlowDirection="RightToLeft"  IsChecked="{Binding BTSerialStatus}" 
                                     IsEnabled="false" VerticalAlignment="Center" Margin="15 0 0 0"
                                     Style="{DynamicResource RadioButtonStyle1}"></RadioButton>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"  Margin="5 3">
                            <TextBlock Text="COM Port" Margin="10 5" Width="80"/>
                            <ComboBox ItemsSource="{Binding ComPortList}"
                                      SelectedItem="{Binding SelectedComPort}"
                                      IsSynchronizedWithCurrentItem="True"
                                      MinWidth="80"
                                      SelectedIndex="{Binding SelectedComPortIndex}">
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"  Margin="5 3">
                            <TextBlock Text="Baud Rate" Margin="10 5" Width="80" />
                            <ComboBox ItemsSource="{Binding BaudRateList}"
                                      SelectedItem="{Binding SelectedBaudRate}"
                                      IsSynchronizedWithCurrentItem="True"
                                      MinWidth="80"
                                      SelectedIndex="{Binding BaudRateIndex}">
                            </ComboBox>
                        </StackPanel>


                        <StackPanel Orientation="Horizontal" Margin="10 5">
                            <TextBox Text="{Binding BluetoothInputText}" Width="150" Height="auto" Margin="0 0 10 0" VerticalContentAlignment="Center"/>
                            <Button x:Name="SendToArduinoBlueTooth" Content="Send"  Style="{DynamicResource ButtonStyle1}"/>
                        </StackPanel>
                    </StackPanel>

                    <!-- Column 1-->
                    <StackPanel Grid.Column="2" Margin="5,5,5,12">
                        <TextBlock Text="Received from Arduino" Margin="0 5" />
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding BTReceivedMessage}"  Style="{DynamicResource LogViewerStyle}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="#" FontWeight="DemiBold"></TextBlock>
                                            <TextBlock Text="{Binding Idx}" FontWeight="DemiBold"></TextBlock>
                                            <TextBlock Text=" "></TextBlock>
                                            <TextBlock Text="{Binding Timestamp}" FontWeight="DemiBold" FontStyle="Italic"></TextBlock>
                                            <TextBlock Text=": " FontWeight="DemiBold"></TextBlock>
                                            <TextBlock Text="{Binding Message}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                        <Slider x:Name="BTSlider" Value="{Binding BTSliderVal}" Width="370" Minimum="-1000" Maximum="1000" IsSnapToTickEnabled="True" TickFrequency="100" Margin="10 0 0 0" VerticalAlignment="Center"/>
                        <Label Content="Value:" VerticalAlignment="Center"></Label>
                        <TextBlock Text="{Binding BTSliderVal, StringFormat={}{0:0.#}}" Margin="10 0" Width="50" VerticalAlignment="Center"></TextBlock>
                    </StackPanel>
                    
                    <!-- Stepper Motor Settings -->
                    <GroupBox Grid.Row="3" Header="Stepper Motor Settings" FontWeight="DemiBold" BorderThickness="1" BorderBrush="DimGray">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 5">
                                <Label Content="Step type"/>
                                <ComboBox ItemsSource="{Binding MotorStepTypeList}"
                                      SelectedItem="{Binding MotorStepType}"
                                      SelectedIndex="{Binding MotorStepTypeIdx}"
                                      MinWidth="80" Margin="20 0">
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Motor Speed" />
                                <Slider  Value="{Binding StepMotorSpeed}" Minimum="0" Maximum="1000" IsSnapToTickEnabled="True" TickFrequency="100" Width="80"></Slider>
                                <TextBox Text="{Binding StepMotorSpeed}"></TextBox>
                            </StackPanel>
                        </StackPanel>
                        
                    </GroupBox>
                    
                </Grid>
            </GroupBox>
        </Grid>

        <!-- ####################################################################################################################################################################################################################################################################################-->
        <!--  ########## COLUMN THREE ##############  -->
        
        <Border Grid.Row="2" Grid.Column="3" Grid.RowSpan="6" BorderBrush="Black" BorderThickness="1"/>
        <Grid Grid.Row="2" Grid.Column="3" Grid.RowSpan="6">
            <Grid.RowDefinitions>
                <RowDefinition Height="5"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="5"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="5"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!-- Timeline-->
            <GroupBox Header="Timeline" Grid.Row="1" Grid.Column="1" BorderThickness="1" BorderBrush="DimGray">
                <Grid Grid.Row="1" Grid.Column="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="1" Grid.Row="1" >
                        <StackPanel  Margin="0 5">
                            <DockPanel>
                                <Label DockPanel.Dock="Left" Content="0"></Label>
                                <Label DockPanel.Dock="Right" Content="10" HorizontalAlignment="Right"></Label>
                            </DockPanel>
                            <StackPanel>
                                <Path Stroke="Black" StrokeThickness="2" Data="M 0,0 L 100,0" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 00,-2 L 0,5" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 100,0 L 100,-5" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 100,-6 L 200,-6" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 200,-6 L 200,0" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 200,-6 L 200,-6" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 200,-6 L 300,-6" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 300,-6 L 300, 0" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 300,-6 L 400, -6" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 400,-6 L 400, -0" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 400,-6 L 500, -6" />
                                <Path Stroke="Black" StrokeThickness="2" Data="M 500,-7 L 500, 0" />
                            </StackPanel>
                            <StackPanel  Orientation="Horizontal" >
                                <!--a <Slider Value="{Binding FloaterPosdf}" Width="500" Minimum="0" Maximum="500"></Slider>-->
                                <!--<TextBlock Text="{Binding FloaterPos, FallbackValue=504}" ></TextBlock>-->
                            </StackPanel>
                        </StackPanel>

                        <Canvas Grid.Column="1" Grid.Row="1" Width="500" MaxWidth="500" Height="90" 
                            Background="Gray" HorizontalAlignment="Left" x:Name="Canvas"
                            cal:Message.Attach= "[Event MouseMove] = [Action MouseMove($source)]">
                            <ListView  Background="AliceBlue" Width="500" >
                                <ItemsControl ItemsSource="{Binding Timelines}" x:Name="TL" >
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <ItemsControl x:Name="TimeLine" ItemsSource="{Binding Events}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <Grid x:Name="EventContainer" Height="25" Background="DarkRed" Width="500" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Rectangle Grid.Column="1" Fill="Green" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                                                                       cal:Action.TargetWithoutContext="{Binding Path=DataContext, ElementName=TimeLine}"
                                                                       cal:Message.Attach= "[Event PreviewMouseLeftButtonDown] = [Action TimeLineEventLeftDown($source, $eventArgs)];
                                                                       [Event PreviewMouseLeftButtonUp] = [Action TimeLineEventLeftUp($source)];
                                                                       [Event PreviewMouseMove] = [Action TimeLineEventMouseMove($source)]" >
                                                                <Rectangle.Margin>
                                                                    <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                                        <Binding ElementName="TimeLine" Path="DataContext.Duration"/>
                                                                        <Binding Path="Start"/>
                                                                        <Binding ElementName="EventContainer" Path="ActualWidth"/>
                                                                    </MultiBinding>
                                                                </Rectangle.Margin>
                                                                <Rectangle.Width>
                                                                    <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                                        <Binding ElementName="TimeLine" Path="DataContext.Duration"/>
                                                                        <Binding Path="Duration"/>
                                                                        <Binding ElementName="EventContainer" Path="ActualWidth"/>
                                                                    </MultiBinding>
                                                                </Rectangle.Width>
                                                            </Rectangle>
                                                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Padding="5" IsHitTestVisible="False">
                                                                <TextBlock.Margin>
                                                                    <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                                        <Binding ElementName="TimeLine" Path="DataContext.Duration"/>
                                                                        <Binding Path="Start"/>
                                                                        <Binding ElementName="EventContainer" Path="ActualWidth"/>
                                                                    </MultiBinding>
                                                                </TextBlock.Margin>
                                                            </TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ListView>

                            <Rectangle x:Name="Floater" Width="9" Height="90" 
                                   Fill="MediumVioletRed" Stroke="Black" StrokeThickness="3" 
                                   Canvas.Left="{Binding FloaterPos,Mode=TwoWay}"
                                   cal:Message.Attach = "[Event MouseLeftButtonDown] = [Action MouseDown]">
                            <Rectangle.Triggers>
                                <EventTrigger RoutedEvent="MouseLeftButtonDown">
                                    <StopStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                                </EventTrigger>
                            </Rectangle.Triggers>
                        </Rectangle>
                        <!--<RepeatButton x:Name="Butter" Width="9" Height="100" Canvas.Left="{Binding FloaterPos}"
                            Background="AliceBlue" BorderBrush="Black" BorderThickness="3"
                                >
                        </RepeatButton>--> 
                        <!--cal:Message.Attach = "[Event MouseRightButtonUp] = [Action MouseUp]"
                            cal:Message.Attach = "[Event MouseDown] = [Action MouseDown]"
                            -->
                            
                        <!--<Canvas.Triggers>
                            <EventTrigger RoutedEvent="MouseMove">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Floater"
                                            Storyboard.TargetProperty="(Canvas.Left)"
                                            Duration="0:0:0" 
                                            To="{Binding FloaterPos}">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Canvas.Triggers>-->
                    </Canvas>

                        <!--<Slider Value="{Binding FloaterPos}" Width="500" Minimum="0" Maximum="500"></Slider>-->
                        <StackPanel Orientation="Horizontal" Grid.Row="2">
                            <Button Name="StartButton">Start</Button>
                            <Button Name="PauseButton">Pause</Button>
                            <Button Name="ResumeButton">Resume</Button>
                            <Button Name="SkipToEndButton">Skip To End</Button>
                            <Button Name="StopButton">Stop</Button>
                        </StackPanel>
                        
                        <!-- Debug row-->
                        <Grid  Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            
                            <StackPanel Grid.Column="0" >
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Mouse status: "></Label>
                                    <TextBlock Text="{Binding MouseStatus, FallbackValue=0}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Mouse Y pos: "></Label>
                                    <TextBlock Text="{Binding MousePosX, FallbackValue=0}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Floater pos: "></Label>
                                    <TextBlock Text="{Binding FloaterPos, FallbackValue=0}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Time: "></Label>
                                    <TextBlock Text="{Binding CurrentTime, FallbackValue=0, StringFormat={}{0:#}}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Time string: "></Label>
                                    <TextBlock Text="{Binding CurrentTimeStr, FallbackValue=0, StringFormat={}{0:#}}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Duration: "></Label>
                                    <TextBlock Text="{Binding StoryDuration, FallbackValue=0, StringFormat={}{0:#}}" VerticalAlignment="Center" ></TextBlock>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Grid.Column="1">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Debug text:"></Label>
                                    <TextBlock Text="{Binding DebugString}" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="TimeLine Pos X text:"></Label>
                                    <TextBlock Text="{Binding TimeLineEventPosX}" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                            </StackPanel>
                            
                        </Grid>
                        
                        <Button Grid.Row="4" x:Name="FeedTimelines" Content="Stop SB" >
                            
                        </Button>
                        
                    </StackPanel>
                    <!--<StackPanel Grid.Row="2" Grid.Column="1" Background="AliceBlue" Width="500"  Grid.RowSpan="3">
                        <ItemsControl ItemsSource="{Binding Timelines}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ItemsControl x:Name="TimeLine" ItemsSource="{Binding Path=Events}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Grid x:Name="EventContainer" Height="25" Margin="3" Background="Gainsboro"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Rectangle Grid.Column="1" Fill="Green" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                                                    <Rectangle.Margin>
                                                        <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                            <Binding ElementName="TimeLine" Path="DataContext.Duration"/>
                                                            <Binding Path="Start"/>
                                                            <Binding ElementName="EventContainer" Path="ActualWidth"/>
                                                        </MultiBinding>
                                                    </Rectangle.Margin>
                                                    <Rectangle.Width>
                                                        <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                            <Binding ElementName="TimeLine" Path="DataContext.Duration"/>
                                                            <Binding Path="Duration"/>
                                                            <Binding ElementName="EventContainer" Path="ActualWidth"/>
                                                        </MultiBinding>
                                                    </Rectangle.Width>
                                                </Rectangle>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>-->
                    
                    <Grid.Triggers>
                        <EventTrigger SourceName="StartButton" RoutedEvent="Button.Click">
                            <StopStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                            <BeginStoryboard x:Name="TheTimelineStoryboard">
                                <Storyboard CurrentTimeInvalidated="CurrentTimeInvalidatedEventHandler" >
                                    <DoubleAnimation 
                                            Storyboard.TargetName="Floater"
                                            Storyboard.TargetProperty="(Canvas.Left)"
                                            FillBehavior="HoldEnd"
                                            Duration="{Binding StoryDuration}"
                                            From="{Binding FloaterPos}" To="500">
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger SourceName="PauseButton" RoutedEvent="Button.Click">
                            <PauseStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                        <EventTrigger SourceName="ResumeButton" RoutedEvent="Button.Click">
                            <ResumeStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                        <EventTrigger SourceName="SkipToEndButton" RoutedEvent="Button.Click">
                            <SkipStoryboardToFill BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                        <EventTrigger SourceName="StopButton" RoutedEvent="Button.Click">
                            <StopStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                        <EventTrigger SourceName="Floater" RoutedEvent="MouseLeftButtonDown">
                            <StopStoryboard BeginStoryboardName="TheTimelineStoryboard" />
                        </EventTrigger>
                    </Grid.Triggers>
                </Grid>
            </GroupBox>
        </Grid>
        
        <!-- ####################################################################################################################################################################################################################################################################################-->
        <!-- Status bar -->
        <Grid Grid.Row="14" Grid.Column="0" Grid.ColumnSpan="10" Background="#466874" >
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" >
                    <Label Content="Socket status: " Foreground="Gainsboro" FontSize="10" ></Label>
                    <Label Content="{Binding ConnectionStatusStr}" Foreground="Gainsboro" FontSize="10"></Label>
                    <Label Content="Controller status: " Foreground="Gainsboro" FontSize="10"></Label>
                    <Label Content="{Binding ControllerConnectionStatusBool}" Foreground="Gainsboro" FontSize="10"></Label>
                    <Label Content="Controller move type: " Foreground="Gainsboro" FontSize="10"></Label>
                    <Label Content="{Binding ControllerMoveToggle}" Foreground="Gainsboro" FontSize="10"></Label>
                </StackPanel>
            </DockPanel>
        </Grid>
    </Grid>
    <!-- Styles and templates-->


</Window>
